import com.rameses.annotations.*; 

class OccupancyApplicationTransmittalReportInterceptor {
	
	@DataContext("occupancy_application_transmittal")
	def transmittalEm;

	@DataContext("vw_occupancy_application")
	def appEm;

	@DataContext("occupancy_application_requirement")
	def reqEm;

	@DataContext("occupancy_evaluation_finding")
	def findingEm;

	@After(pattern="FormReportService.getData", eval="#{ args[0].reportid == 'occupancy_application_transmittal' }")
	public void getOccupancyApplicationTransmittal( def evt ) {
		def p = evt.args[0];
		def result = evt.result;
		def transmittalid = p.parameters.transmittalid;
		if(!transmittalid) throw new Exception("transmittalid is required in requirement checklist report")

		def t = transmittalEm.find([objid: transmittalid]).first();
		if(!t) throw new Exception("Transmittal " + transmittalid + " not found ");
		//check if requirement or finding transmittal.

		def ea = appEm.find( [objid: t.appid ] ).first();
		ea.receiver = t.createdby;
		ea.transmittalno = t.objid;
		ea.transmittaltype = t.type;
		ea.permittype =  "OCCUPANCY PERMIT";

		if(t.type == "requirement") {
			ea.items = reqEm.find( [transmittalid : t.objid ] ).orderBy("type.sortorder").list(); 
		}
		else {
			ea.items = findingEm.find( [transmittalid : t.objid ] ).orderBy("section.type.sortindex").list(); 
			ea.items.each {
				if(it.attachment ) {
					it.attachment = "image:"+it.attachment;
				}
			}
		}

		result.data = ea;
	}	


}