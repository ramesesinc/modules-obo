import com.rameses.annotations.*; 


/*****
* This is a general interceptor for all persistence related data in building permit
*****/
class BuildingPermitPersistenceInterceptor {

	@DataContext("building_permit_issuance")
	def issuanceEm;

	@Env
	def env;

	@After(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'building_permit' && args[0].txnmode == 'CAPTURE' }")
	public void afterCreate(def evt) {
		def a = evt.args[0];
		def result = evt.result;
		def p = [:];
		p.appid = result.objid;
		p.controlno = a.permitno;
		p.dtissued = a.appdate;
		p.typeid = 'building_permit';
		p.txnmode = 'CAPTURE';
		issuanceEm.create( p );
	}

	@Before(pattern="PersistenceService.(create|update)", eval="#{args[0]._schemaname == 'building_permit_requirement' }")
	public void beforeReqCreateUpdate(def evt) {
		def a = evt.args[0];
		a.modifiedby = [objid:env.USERID, name: env.FULLNAME];
	}



}