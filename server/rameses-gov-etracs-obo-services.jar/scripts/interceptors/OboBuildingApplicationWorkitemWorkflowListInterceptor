import com.rameses.annotations.*; 

class OboBuildingApplicationWorkitemWorkflowListInterceptor { 

	@DataContext("vw_obo_building_application_workitem")
	def appTask;

	@Env
	def env;

	@After(pattern="WorkflowTaskListService.getNodeList", eval="#{args[0].processname == 'obo_building_application_workitem' }") 
	public void afterGetNodes( def evt ) {
		def args = evt.args[0];
		def result = evt.result;
		result.each {
			if( it.name == 'mytask' ) {
				it.count = appTask.select("c:{COUNT(*)}").where("workitem.objid = :typeid AND task.assignee.objid = :uid AND NOT(task.state = 'end') ", [uid: env.USERID, typeid: args.typeid ]).val();
			}
			else if(it.tracktime == 1) {
				it.count = appTask.select("c:{COUNT(*)}").where("workitem.objid = :typeid AND task.state = :t", [t:it.name, typeid: args.typeid ] ).val();
			}
			if( it.count > 0 ) {
				it.title = it.title + " (" + it.count + ")";
			}
		}
	}

} 