import com.rameses.annotations.*; 

class BuildingPermitEmailSenderInterceptor {
	
	@Service("TemplateService")
	def templateService;

	@Service(value="SmtpService", connection="email-sms-server")
	def smtpSvc;

	@Service(value="SMSService", connection="email-sms-server")
	def smsSvc;

	@DataContext("building_permit_finding")
	def findingEm;

	@DataContext("building_permit_requirement")
	def reqEm;

	@DataContext("building_permit")
	def appEm;

	@After(pattern="BuildingPermitOnlineService.sendRequirementFindings")
	public void sendRequirementEmail( def evt ) {
		def p = evt.args[0];
		def appid = p.objid;
		def app = appEm.find( [objid: appid ] ).first();

		def data = [:];
		data.app = app;
		data.findings = reqEm.find( [appid: appid ] ).where("checked = 0").list().groupBy({it.parent}); 
		def msg1 = templateService.get( "building_permit_requirement_findings", [data:data] ).toString();

		smtpSvc.send( [to: app.contact.email, subject:"Building Permit Requirements", message: msg1] );

		if(app.contact.mobileno) {
			String msg = "Your application has not yet been received due to requirement defeciencies. Please check your email for details. From Legazpi City OBO";		
			smsSvc.send( [phoneno: app.contact.mobileno, message: msg ]);
		}
	}	

	@After(pattern="BuildingPermitOnlineService.receive")
	public void sendEmailAfterReceive( def evt ) {
		def p = evt.args[0];
		def appid = p.objid;
		def app = appEm.find( [objid: appid ] ).first();

		String msg = "Your application has been confirmed. Your application number is " + app.appno + ". Please wait for evaluation. From Legazpi City OBO";
		smtpSvc.send( [to: app.contact.email, subject:"Building Permit Application Confirmation", message: msg] );
		if(app.contact.mobileno) {
			smsSvc.send( [phoneno: app.contact.mobileno, message: msg ]);
		}
	}	

	@After(pattern="WorkflowTaskService.signal", eval="#{args[0].processname == 'building_permit' && args[0].action == 'for-revision' }")public void sendEmailAfterRevision( def evt ) {
		def p = evt.args[0];
		def appid = p.refid;

		def app = appEm.find( [objid: appid ] ).first();

		def data = [:];
		data.app = app;

		def findings = findingEm.find([appid: appid]).where("status = 'FOR-REVISION'").list();
		data.findings = findings.groupBy{ it.parent };

		def msg = templateService.get( "building_permit_evaluation_findings", [data:data] ).toString();

		smtpSvc.send( [to: app.contact.email, subject:"Building Permit Findings", message: msg] );

		if(app.contact.mobileno) {
			smsSvc.send( [phoneno: app.contact.mobileno, message:'Please check email for your evaluation. From Legazpi OBO' ]);
		}
	}
}