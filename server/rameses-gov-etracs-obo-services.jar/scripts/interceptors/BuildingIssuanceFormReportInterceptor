import com.rameses.annotations.*; 

class BuildingIssuanceFormReportInterceptor {
	
	@DataContext("vw_building_application_subdoc")
	def vwSubdocEm;

	@DataContext("vw_building_application")
	def vwAppEm;

	@DataContext("vw_building_application_fee_payment")
	def payEm;


	@After(pattern="FormReportService.getData", eval="#{args[0].reportid == 'building_issuance' }")
	public void getBuildingIssuanceReport( def evt ) {
		def p = evt.args[0];
		def result = evt.result;
		def id = p.parameters.objid;

		def docsub = vwSubdocEm.find([objid: id ]).first();

		def app = vwAppEm.find( [objid: docsub.appid ] ).first();

		docsub.applicant = app.applicant;
		docsub.location = app.location;
		docsub.occupancytype = app.occupancytype;
		docsub.appno = app.appno;
		docsub.apptype = app.apptype;		
		docsub.appno = app.permitno;
		docsub.title = app.title;
		docsub.numunits = app.numunits;
		docsub.fixedcost = app.fixedcost;
		docsub.projectcost = app.projectcost;
		docsub.dtproposedconstruction = app.dtproposedconstruction;
		docsub.dtexpectedcompletion = app.dtexpectedcompletion;
		docsub.totalfloorarea = app.totalfloorarea;
		docsub.height = app.height;
		docsub.numfloors = app.numfloors;
		docsub.zone = app.zone;
		docsub.zoneclass = app.zoneclass;

		def pay = payEm.find( [ parentid: docsub.objid ] ).select("payment.refno,payment.refdate, amount:{SUM(amtpaid)}").groupBy("payment.refno,payment.refdate").first();
		docsub.receiptno = pay.payment.refno;
		docsub.receiptdate = pay.payment.refdate;
		docsub.amount = pay.amount;

		result.data = docsub;
	}	


}