import com.rameses.annotations.*; 

class BuildingPermitOnlineListInterceptor {

	@After(pattern="QueryService.getNodeList", eval="#{args[0]._schemaname == 'vw_building_permit_online' }")
	public void getNodeList(def evt) {
		def result = evt.result;
		result << [id: 'pending' , title: 'Pending' ];
		result << [id: 'receiving' , title: 'Receiving' ];
		result << [id: 'processing' , title: 'Processing' ];
		result << [id: 'ended' , title: 'Ended' ];
	}

	@Before(pattern="QueryService.getList", eval="#{args[0]._schemaname == 'vw_building_permit_online' }")
	public void loadList(def evt) {
		def o = evt.args[0];
		//o.debug = true;
		if( !o.node?.id ) return;

		def str = " 1=1 ";
		def m = [:];
		if(o.node.id == 'pending') {
			str += " AND task.state IS NULL ";
		}
		else if(o.node.id == 'receiving') {
			m.state = "receiving";
			str += " AND task.state = :state ";			
		}
		else if(o.node.id == 'processing') {
			str += " AND task.state NOT IN ('receiving', 'end' ) ";			
		}
		else if (o.node.id == 'end') {
			m.state = "end";
			str += " AND task.state :state ";			
		}

		//add to first position of where
		if( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		}
	}


}