import com.rameses.annotations.*; 

class BuildingPermitFormReportInterceptor {
	
	@DataContext("vw_building_permit")
	def vwAppEm;

	@DataContext("vw_building_permit_section")
	def evalEm;

	@DataContext("building_permit_task")
	def taskEm;

	@DataContext("building_permit_transmittal")
	def transmittalEm;


	@DataContext("building_permit_requirement")
	def reqEm;

	@DataContext("building_permit_finding")
	def findingEm;

	

	@DataContext("vw_building_permit_fee_payment")
	def payEm;

	@After(pattern="FormReportService.getData", eval="#{args[0].reportid.matches('building_permit|building_permit_signboard')}")
	public void getBuildingPermitReport( def evt ) {
		def p = evt.args[0];
		def result = evt.result;
		def id = p.parameters.objid;
		
		def app = vwAppEm.find( [objid: id ] ).first();	
		app.name = app.applicant?.lastname + ", " + app.applicant?.firstname;

		//get the total payment per section
		def em = payEm.find( [appid: app.objid ] ).select("payment.refno,payment.refdate,amount:{SUM(amount)}").groupBy( "payment.refno,payment.refdate" );
		def totals = em.where( " org.objid IS NULL " ).first();
		if( totals ) {
			app.receiptno = totals.payment.refno;
			app.receiptdate = totals.payment.refdate;
			app.amount = totals.amount;		
		}

		result.data = app;
	}	


}