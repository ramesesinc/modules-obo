import com.rameses.annotations.*; 

class BuildingPermitFormReportInterceptor {
	
	@DataContext("vw_building_permit")
	def vwAppEm;

	@DataContext("vw_building_permit_section")
	def evalEm;

	@DataContext("building_permit_task")
	def taskEm;

	@After(pattern="FormReportService.getData", eval="#{args[0].reportid == 'building_permit_claimstub'}")
	public void getBuildingPermitClaimStubReport( def evt ) {
		def p = evt.args[0];
		def result = evt.result;
		def id = p.parameters.objid;
		def ea = vwAppEm.find( [objid: id ] ).first();
		def r = taskEm.find( [refid: id, state: 'receiving'] ).first();
		ea.startdate = r.startdate;
		ea.enddate = r.enddate;
		ea.receivedby = r.actor.name;
		result.data = ea;
	}	

	@After(pattern="FormReportService.getData", eval="#{args[0].reportid == 'building_permit_doc_verification_checklist'}")
	public void getBuildingPermitVerificationChecklistReport( def evt ) {
		def p = evt.args[0];
		def result = evt.result;
		def id = p.parameters.objid;
		def ea = vwAppEm.find( [objid: id ] ).first();
		result.data = ea;
	}	

	@After(pattern="FormReportService.getData", eval="#{args[0].reportid == 'building_permit'}")
	public void getBuildingPermitReport( def evt ) {
		def p = evt.args[0];
		def result = evt.result;
		def id = p.parameters.objid;
		def app = vwAppEm.find( [objid: id ] ).first();	
		app.name = app.applicant?.lastname + ", " + app.applicant?.firstname;
		result.data = app;
	}	
	
	@After(pattern="FormReportService.getData", eval="#{args[0].reportid == 'building_permit_section'}")
	public void getLocationalClearanceReport( def evt ) {
		def p = evt.args[0];
		def result = evt.result;
		def id = p.parameters.objid;
		def ea = evalEm.find( [objid: id ] ).first();
		def app = vwAppEm.find( [objid: ea.appid ] ).first();	
		app.name = app.applicant?.lastname + ", " + app.applicant?.firstname;
		app.remove("issuance");
		ea.putAll( app );
		result.data = ea;
	}	



}