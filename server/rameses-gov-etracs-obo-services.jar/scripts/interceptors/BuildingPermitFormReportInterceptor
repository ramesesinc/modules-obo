import com.rameses.annotations.*; 

class BuildingPermitFormReportInterceptor {
	
	@DataContext("vw_building_permit")
	def vwPermitEm;

	@DataContext("building_application_payment")
	def pmtEm;

	@DataContext("building_application_subdoc")
	def subdocEm;

	@DataContext("vw_building_issuance")
	def issEm;

	@After(pattern="FormReportService.getData", eval="#{args[0].reportid.matches('building_permit|building_permit_signboard')}")
	public void getBuildingPermitReport( def evt ) {
		def p = evt.args[0];
		def result = evt.result;
		def id = p.parameters.objid;

		def pmt = vwPermitEm.find( [objid: id ] ).first();	
		pmt.name = pmt.applicant?.lastname + ", " + pmt.applicant?.firstname;
		
		def anc = subdocEm.find( [appid: pmt.appid ]  ).list();
		pmt.profarchitect =	anc.find{ it.permittypeid.toLowerCase() == 'architectural' }?.designprofessional;	 
		pmt.profcivil = anc.find{ it.permittypeid.toLowerCase() == 'civil_structural' }?.designprofessional;
		pmt.profelectrical = anc.find{ it.permittypeid.toLowerCase() == 'electrical' }?.designprofessional;
		pmt.profelectrical = anc.find{ it.permittypeid.toLowerCase() == 'electrical' }?.designprofessional;
		pmt.profmechanical =  anc.find{ it.permittypeid.toLowerCase() == 'mechanical' }?.designprofessional;
		pmt.profsanitary = anc.find{ it.permittypeid.toLowerCase() == 'sanitary' }?.designprofessional;
		pmt.profplumbing = anc.find{ it.permittypeid.toLowerCase() == 'plumbing' }?.designprofessional;
		pmt.profelectronic = anc.find{ it.permittypeid.toLowerCase() == 'electronic' }?.designprofessional;
		//pmt.scopeofowrk = pmt.worktypes?.join(",");

		//load the issuances
		def issList = issEm.find( [appid: pmt.appid ] ).list();
		def issuances = [:];
		issList.each {
			issuances.put( it.sectionid.toLowerCase(), [controlno: it.controlno, dtissued: it.dtissued ] );
		}
		pmt.issuances = issuances;

		//load the fees
		def list = vwPermitEm.getCategorizedFees( [appid: pmt.appid ] );
		def fees = [:]
		list.each  {
			fees.put( it.tag.split(":")[1].toLowerCase() , it.amount );
		}
		pmt.fees = fees;

		def rct = pmtEm.find( [appid: pmt.appid ]).first();
		pmt.receiptno = rct.refno;
		pmt.receiptdate = rct.refdate;
		pmt.amount = rct.amount;

		result.data = pmt;
	}	


}