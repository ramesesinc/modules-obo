import com.rameses.annotations.*; 
import java.rmi.server.*;

class OboApplicationRequirementService {

	@Service("DateService")
	def dateSvc;

	@Service("ControlnoGeneratorService")
	def controlNoSvc;

	@DataContext(dynamic=true)
	def em;

	@Service("Var")
	def sysvar;

	@Env
	def env;


	/**************************
 	states:
    	0 - untouched
    	1 - closed
    	2 - for revision
    	3 - not applicable
    	4 - overridden
    **************************/
	@ProxyMethod
	public def update( def o ) {
		if( !o.schemaname ) throw new Exception("schemaname is required in OboApplicationRequirementService.update ");
		def reqEm = em.lookup( o.schemaname + "_requirement" );
		o.reviewer = [objid: env.USERID, name: env.FULLNAME ];
		o.dtreviewed = dateSvc.getServerDate();
		if(o.previd ) {
			def z = reqEm.create(o);
			reqEm.find( [objid: o.previd] ).update( [supersederid: z.objid, state: 4 ] );
		}	
		else {
			reqEm.find( [objid: o.objid ] ).update( [state: o.state, remarks: o.remarks, reviewer: o.reviewer, dtreviewed: o.dtreviewed ] );
		}
		return o;
	}

	

}
