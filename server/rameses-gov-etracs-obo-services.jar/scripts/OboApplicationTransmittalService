import com.rameses.annotations.*; 
import java.rmi.server.*;

class OboApplicationTransmittalService {

	@Service("DateService")
	def dateSvc;

	@Service("ControlnoGeneratorService")
	def controlNoSvc;

	@DataContext(dynamic=true)
	def em;

	@Service("Var")
	def sysvar;

	@Env
	def env;

	@ProxyMethod
	public def create( def o ) {
		if(!o.taskid) throw new Exception("taskid is required in OboApplicationTransmittalService.create");
		if(!o.appid) throw new Exception("appid is required in OboApplicationTransmittalService.create");
		if(!o.schemaname) throw new Exception("schemaname is required in OboApplicationTransmittalService.create");
		if(!o.type) throw new Exception("Please include type if requirement or finding in OboApplicationTransmittalService.create")

		def itemEm = em.lookup( o.schemaname + "_" + o.type );

		//validate first if there are existing open items that need to be transmitted
		def c = itemEm.select("c:{COUNT(*)}").find([appid:o.appid]).where("state = 0").val();
		if( c>0) throw new Exception("All " + o.type + "s must be checked first");
		
		c = itemEm.select("c:{COUNT(*)}").find([appid:o.appid]).where("supersederid IS NULL AND state = 2 AND transmittalid IS NULL").val();
		if( c<=0) throw new Exception("Please ensure that there is at least one item that needs revision");	

		def t = [:];
		def varname = o.schemaname + "_" + o.type +  "_transmittal";
		def pattern = sysvar.get(  varname );
		if(!pattern) throw new Exception("Please define " + varname + " entry in sys_var. Ex. BP-RT-[yyyyMM]-[%05d]");

		def transmittalEm = em.lookup(  o.schemaname  + "_transmittal" );

		t.objid = controlNoSvc.getNextNo( pattern );
		t.appid = o.appid;
		t.type = o.type;
		t.createdby = [objid: env.USERID, name: env.FULLNAME ];
		t.dtcreated = dateSvc.getServerDate();
		t.taskid = o.taskid;
		t.state = 0;
		transmittalEm.create( t );

		//update all open  
		itemEm.find([appid: o.appid]).where("state=2 AND transmittalid IS NULL").update( [transmittalid: t.objid] );
		return t;	
	}

	//just include this but it will be called from the admin side.
	@ProxyMethod
	public def remove( def o ) {
		if(!o.transmittalid) throw new Exception("Please include transmittalid");
		if(!o.schemaname) throw new Exception("schemaname is required in OboApplicationTransmittalService.removeCheckList");
		if(!o.type) throw new Exception("type is required in OboApplicationTransmittalService.removeCheckList");

		def reqEm = em.lookup( o.schemaname + "_" + o.type );
		reqEm.find([transmittalid: o.transmittalid ]).update( [transmittalid: "{NULL}"] );
		def transmittalEm = em.lookup(  o.schemaname  + "_transmittal" );
		transmittalEm.find( [objid: o.transmittalid ]).delete();
	}
	

}
