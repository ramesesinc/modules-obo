import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import obo.facts.*;
import java.text.*;
import treasury.utils.*;
import treasury.facts.*;

public class OboApplicationService  {
	
	@Service("DateService")
	def dateSvc;

	@Service("ControlnoGeneratorService")
	def controlNoSvc;

	@DataContext(dynamic=true)
	def em;

	@Service("Var")
	def sysvar;

	@Env
	def env;

	@ProxyMethod
	public def accept(def o ) {
		if(!o.schemaname) throw new Exception("Please specify a schemaname in OboApplicationService.accept");
		if(!o.appid) throw new Exception("Please specify a appid in OboApplicationService.accept");

		def appid = o.appid;

		//check first if there are open requirements
		def reqEm = em.lookup( o.schemaname + "_requirement"); 
		def c = reqEm.select("c:{COUNT(*)}").find([appid:appid]).where("state = 0").val();
		if( c>0) throw new Exception("All requirements must pass");
		c = reqEm.select("c:{COUNT(*)}").find([appid:appid]).where("supersederid IS NULL AND state = 2").val();
		if( c>0) throw new Exception("There are still requirements that need to be revised");

		//update the appno first
		def varname = o.schemaname + "_appno";
		def pattern = sysvar.get(  varname );
		if(!pattern) throw new Exception("Please define " + varname + " entry in sys_var. Ex. BP-[yyyyMM]-[%05d]");

		def appEm = em.lookup( o.schemaname );
		def u = [:];
		u.appdate = dateSvc.getServerDate();
		u.appno = controlNoSvc.getNextNo( pattern );
		appEm.find( [objid: appid ] ).update( u );
		return u;
	}

	@ProxyMethod
	public def updatePermitNo( def o ) {
		if(!o.schemaname) throw new Exception("Please specify a schemaname in OboApplicationService.updatePermitNo");
		if(!o.appid) throw new Exception("Please specify a appid in OboApplicationService.updatePermitNo");

		def appid = o.appid;

		def varname = o.schemaname + "_permitno";
		def pattern = sysvar.get( varname );
		if(!pattern) throw new Exception("Please define " + varname + " entry in sys_var. Ex. BP-[yyyyMM]-[%05d]");

		def appEm = em.lookup( o.schemaname );
		def u = [:];
		u.dtissued = dateSvc.getServerDate();
		u.permitno = controlNoSvc.getNextNo( pattern );	
		u.remarks = o.remarks;
		appEm.find( [objid: appid ]).update (u ) ;

		return u;
	}


}