import com.rameses.annotations.*; 

class BuildingPermitIssuanceService {

	@DataContext("building_permit")
	def bpEm;

	@DataContext("building_permit_section")
	def sectionEm;

	@DataContext("building_permit_issuance")
	def issuanceEm;

	@DataContext("obo_issuance_type")
	def typeEm;

	@Service("DateService")
	def dateSvc;

	@Service("ControlnoGeneratorService")
	def controlNoSvc;

	@Service("WorkflowTaskService")
	def wfSvc;

	@ProxyMethod
	public void startRelease( def o ) {
		def dt = dateSvc.getServerDate();

		//find first sections of this application
		def sections = sectionEm.find([appid: o.appid ] ).list()*.typeid;
		def filter = "('" + sections.join("','") + "')"
		def list = typeEm.find( [txntype:"buildingpermit"] ).where("sectionid IS NULL OR sectionid IN " + filter).list()*.objid;

		list.each {
			if(!issuanceEm.find([appid: o.appid, typeid: it] ).exists()) {
				def m = [:];
				m.appid = o.appid;
				m.type = [objid: it];
				m.txnmode = "ONLINE";
				m.typeid = it;
				m = issuanceEm.create(m);
				
				def f = [:];
				f.processname = 'building_permit_issuance';
				f.refid = m.objid;
				f.startdate = dt;
				f.info = [ type: it ];
				wfSvc.start(f);			
			}
		}
	}



}
