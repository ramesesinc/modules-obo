import com.rameses.annotations.*;
import java.rmi.server.*;


class BFPBuildingApplicationPersistenceInterceptor {
	
	@Service("DateService")
	def dateSvc;

	@DataContext("fire_safety_evaluation_clearance")
	def fsecEm;

	@Service( "FireSafetyChecklistService" )
	def checkListSvc;

	@Env
	def env;

	@After(pattern="PersistenceService.read", eval="#{ args[0]._schemaname == 'vw_building_application' && result.task?.state.matches('releasing|end') }")
	public void afterOpenApplication(def evt) {
		def p = evt.args[0];
		def result = evt.result;

		if( result.references == null ) result.references = [];

		def appid = result.objid;
		def cl = checkListSvc.fetch( [appid: appid ]);
		if( cl ) {
			cl.title = "Fire Safety Checklist";
			cl.refno = cl.controlno;
			result.references << cl;
		} 

		def fsec = fsecEm.find( [appid: appid ]).first();
		if( fsec ) {
			fsec.title = "Fire Safety Evaluation Clearance";
			fsec.refno = fsec.controlno;			
			result.references << fsec;
		}
	}

	@After(pattern="PersistenceService.read", eval="#{ args[0]._schemaname == 'vw_building_application_section' && result.typeid == 'FSEC' }")
	public void afterOpenApplicationSection(def evt) {
		def p = evt.args[0];
		def result = evt.result;

		def appid = result.appid;
		result.firesafetychecklist = checkListSvc.fetch( [appid: appid ]);
	}


}