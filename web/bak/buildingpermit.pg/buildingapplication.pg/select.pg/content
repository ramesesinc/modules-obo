<%if( PARAMS.error !=null) { %>
<pre>Error ${PARAMS.error?.message}</pre>
<% } %>
<%
  def ID = 'OBOAPP' + new java.rmi.server.UID();
%>
<script>
\$register(  {id:"lgulist", context: "lgulist-popup", page: "/listlgu",options:{height:600} }  );
\$register(  {id:"tdnumber", context: "tdnumber", 
  page: "/partners/${PARAMS.name}/services/buildingpermit/buildingapplication/tdnumber", title:"Enter TD Number" }   );

\$register(  {id:"tdinfo", context: "tdinfo", 
  page: "/partners/${PARAMS.name}/services/buildingpermit/buildingapplication/tdinfo", title:"Enter Lot Details" }   );

\$register({
  id: "edit-professional",
  context: "edit-professional",
  page: "/popup/edit-professional",
  title: "Edit Professional"
});


\$put("app", 
   new function() {
    var self = this;
    var cacheSvc = Service.lookup("CacheService", "default");
    var oboSvc = Service.lookup("TestOboService", "default");

    this.data = {objid: "${ID}", owner: {address:{}}, lots: [], scope: [], supervisor: {address: {}}};
    this.orgid = '${PARAMS.name}';
    this.ctcno;
    this.lguid;
    this.lguname;
    this.page;
    this.pagesequence = ["record", "addtdno", "ownerdetails"];
     //this.pagesequence = ["enterctcno","record", "addtdno", "ownerdetails"];
    this.conn;
    this.connstat;
    this.ctcmessage;
    this.ctctype;

    //this.classificationList = oboSvc.getClassification();
    this.classificationList = [];
    this.occupancyuseList = [];

    this.propertyChangeListener = {
      "ctctype" : function(value){
        console.log("ctctype = " + value)
        if (value == 'resident') {
          self.lguname = '';
          \$('#inputSearch').attr('disabled','disabled');
          \$('#inputSearchBtn').attr('disabled','disabled');
        } else if (value == 'nonresident') {
          \$('#inputSearch').removeAttr('disabled');
          \$('#inputSearchBtn').removeAttr('disabled');
        }
        BindingUtils.bind();
      },
      "data.classification": function( value ) {
        self.data.classification = null;
        self.data.classificationid = null;
        self.data.occupancyuse = null;
        self.data.occupancyuseid = null;
        self.occupancyuseList = [];
        if (value) {
          self.data.classification = value;
          self.data.classificationid = value.objid;
          self.occupancyuseList = oboSvc.getOccupancyUse({classificationid: value.objid});
        }
        BindingUtils.bind();
      },
      "data.occupancyuse": function( value ) {
        self.data.occupancyuse = null;
        self.data.occupancyuseid = null;
        if (value) {
          self.data.occupancyuse = value;
          self.data.occupancyuseid = value.objid;
        }
        BindingUtils.bind();
      }
    }

    this.editProfessional = function() {
      var type = self.proftype;
      var handler = function( o ) {
        self.data.supervisor = o;
        BindingUtils.bind();
      }
      var params = {callbackHandler: handler, data: FilipizenUtil.copyObject(self.data.supervisor)}
         
      return new PopupOpener ("edit-professional", params, {width:800 , height: 550});
    }


    this.onload = function() {
      self.conn = cacheSvc.get( "conn" );
      if (!self.conn) self.conn = 0;
      self.page = "record";
      //self.page = "enterctcno";
      //console.log(self.page);
      try {
        self.classificationList = oboSvc.getClassification();
      } catch ( e ) {
        console.log( e );
      }
      return self.page;
    }

    this.setLotButtons = function() {
      if (self.data.lots == undefined || self.data.lots.length == 0) {
        \$("#lot-add-button").removeClass("hide");
        \$("#lot-add-more-button").addClass("hide");
      } else {
        \$("#lot-add-more-button").removeClass("hide");
        \$("#lot-add-button").addClass("hide");
      }
    }

    this.selectedLot;
    this.removeLotItem = function(){
      if (!self.selectedLot) return;
        var idx;
        for (var i=0; i<self.data.lots.length; i++) {
          var x = self.data.lots[i];
          if (x.objid == self.selectedLot.objid) {
            idx = i;
            break;
          }
        }
        if (idx != undefined || idx != null) self.data.lots.splice(idx, 1);

        self._controller.refresh();
        self.setLotButtons();
    }

    this.editLotItem = function(){
      var handler = function( x ) {
        var item = FilipizenUtil.findItem(self.data.lots, {objid: x.objid}, "objid");
        if (!item) return;

        if (x.ownertype == 'owned') {
          x.owner = self.data.owner;
        } else {
          var name = x.owner.lastname + ', ' + x.owner.firstname;
          if (x.owner.middlename) name += ' ' + x.owner.middlename;
          x.owner.name = name;
        }
        FilipizenUtil.setObject(item, x);

        self._controller.refresh();
        self.setLotButtons();

      }
      return new PopupOpener ("tdinfo", {data: FilipizenUtil.copyObject(self.selectedLot), callbackHandler: handler},{width:800 , height: 800});

    }

    this.addLotItem = function(){
      var handler1 = function( x ){
        console.log("handler1");
        var item = oboSvc.getTDInfo({tdno: x});
        if (!item) return;

        if (!self.data.lots) self.data.lots = [];
        self.data.lots.push( item );

        self._controller.refresh();
        self.setLotButtons();

      }
      let tdnumberpopup = new PopupOpener ("tdnumber", {callbackHandler: handler1});

      var handler2 = function( x ){
        var item = x; 

        if (x.address.text == undefined || !x.address.text) {
          var addr = x.address;
          var str = '';
          if (addr.lotno) str += addr.lotno + ' ';
          if (addr.blockno) str += addr.blockno + ' ';
          if (addr.street) str += ', ' + addr.street + ' ';
          if (addr.barangay) str += ', ' + addr.baragangay + ' ';
          addr.city = "${PARAMS.info.name}";
          if (addr.city) addr.city = addr.city.toUpperCase();
          addr.province = "${PARAMS.info.group.title}";
          if (addr.province) addr.province = addr.province.toUpperCase();
          str += ', ' + addr.city + ', ' + addr.province;
          x.address.text = str;
        }

        if (x.ownertype == 'owned') {
          x.owner = self.data.owner;
        } else {
          var name = x.owner.lastname + ', ' + x.owner.firstname;
          if (x.owner.middlename) name += ' ' + x.owner.middlename;
          x.owner.name = name;
        }

        if (!self.data.lots) self.data.lots = [];
        self.data.lots.push( item );

        self._controller.refresh();
        self.setLotButtons();

      }
      let tdinfopopup  = new PopupOpener ("tdinfo", {callbackHandler: handler2},{width:800 , height: 700});
      if (self.conn == 0) {
        return tdinfopopup;
      } else if (self.conn == 1) {
        return tdnumberpopup;
      }
    }
    this.hasItems = function(){
      return (this.lots.length > 0);
    }

    this.showPopup = function() {
      var handler = function(p) {
        self.lguid = p.id;
        self.lguname = p.name;
        self._controller.refresh();
      }

      return new PopupOpener( "lgulist", {callbackHandler: handler},{width:400 , height: 500} ); 
    }
    /*
    this.submit = function() {
      window.console.log( self.lguid );
        var elem = \$("#form1");
        if (elem != null) {
          var url = "/partners/${PARAMS.name}/services/buildingpermit/buildingapplication/record";
          if (self.lguid != null) url += "?lguid=" + self.lguid;
          window.console.log( url )
          elem.attr("action", url);
          //elem.submit();
        }
      }
      */

    this.onpageload = function( pg ) {
      //console.log(self.data);
      //window.console.log("onpageload");
      //window.console.log( pg );
      self.conn = 0;
      //window.console.log( self.connstat );  
      var _controller = \$get( pg );

      if (self.conn == 0){
        self.connstat = "Not  Connected";
      } else {
        self.connstat = "Connected";
      }
      if (pg == self.pagesequence[0]) {
        //validate ctc (connect to server)
        if (!self.ctctype) {
          self.ctctype = 'resident';
          self.lguname = '';
          \$('#inputSearch').attr('disabled','disabled');
          \$('#inputSearchBtn').attr('disabled','disabled');
        }
        if (self.conn == 1) {
          \$("#ctc-info").removeClass("hide");
          if (!self.data.owner) {
            \$("#ctc-info-notfound").removeClass("hide");

          } else {
            self.ctcmessage = "Your cedula exists and you can use this in doing online transactions on this site. Please check the ff. information for this cedula.";
            self.data.owner = oboSvc.getCTCInfo({ctcno: self.ctcno});
            if (!self.data.owner) self.data.owner = {};
            /*
            if (self.ctcno == 123 ) {
              self.data.owner = {ctcno:"123",lastname:"Dela Cruz", firstname:"Juan", middlename:"Gonsalez", ctcdtissued:"March-15-2018", ctcdtexpiry:"Oct-15-2019",address:{text:"Poblacion, Legazpi City"}, expired:false, ctcplaceissued:"Legazpi City", message:"Your cedula exists and you can use this in doing online transactions on this site. Please check the ff. information for this cedula."} 
            }
            else if (self.ctcno == 456 ) {
              self.data.owner = {ctcno:"456",lastname:"Gomez", firstname:"Pedro", middlename:"Bacacao", ctcdtissued:"March-15-2017", ctcdtexpiry:"Oct-15-2018",address:{text: "Poblacion, Legazpi City"}, expired:true,ctcplaceissued:"Legazpi City", message:"Your cedula exists but its already expired. If you want to use this CTC No. in doing online transactions on this site. Please renew your CTC No. Click RENEW"
                } 
              }
              */
            if (self.data.owner.expired == true) {
              self.ctcmessage = "Your cedula exists but its already expired. If you want to use this CTC No. in doing online transactions on this site. Please renew your CTC No. Click RENEW";
              \$("#ctcexpired").removeClass("hide");
            } 

            \$("#ctc-info-details").removeClass("hide");


          }
          //_controller.code.init({})
        } else if (self.conn == 0) {
          self.data.owner.ctcno = self.ctcno;
          \$("#ctc-info-input").removeClass("hide");
        }
      } else if (self.page == self.pagesequence[1]) {
        self.setLotButtons();
      }
      if (_controller.code.init) _controller.code.init( self.data );
    }

    this.getPreviousPage = function() {
      var prev;
      for (var i=0; i<self.pagesequence.length; i++) {
        var val = self.pagesequence[i];
        if (self.page == val) {
          break;
        }
        prev = val;
      }
      return prev;
    }

    this.getNextPage = function() {
      var next;
      for (var i=self.pagesequence.length; i>0; i--) {
        var val = self.pagesequence[i];
        if (self.page == val) {
          break;
        }
        next = val;
      }
      return next;
    }

    this.movePrevious = function() {
      var pg = self.getPreviousPage();
      if (pg) {
        self.page = pg;
        return pg;
      }
    }

    this.moveNext = function() {
      var pg = self.getNextPage();
      if (pg) {
        self.page = pg;
        //this.beforeMoveNext( pg );
        return pg;
      }
    }

    this.saveApplication = function() {
      if (!self.data.objid) self.data.objid = "${ID}";
      self.data = oboSvc.saveApplication( self.data );
      alert("Application Successfully Saved.");
      window.location = "/partners/${PARAMS.name}/services/buildingpermit/buildingapplication/preapplication?controlno=" + self.data.controlno;
    }

    this.display = function() {
      //window.console.log( self.lguname + " " + self.lguid );
      //window.console.log( self.data.scope );
      //window.console.log( self.data.scopeparticular )
      //window.console.log( self.data.occupancyuse );
      //window.console.log( self.data.classification );
      //window.console.log("occupancyuseid->" + self.data.occupancyuseid + " classificationid->" + self.data.classificationid);
      //window.console.log( self.data.classificationid );
      ///window.console.log( self.data.units );
      //window.console.log( self.data.floorarea );
      //window.console.log( self.data.estimatedcost );
      //window.console.log( self.data.dtproposedconstruction );
      //window.console.log( self.data.dtexpectedcompletion );
      window.console.log( self.data.supervisor )


    }
   },
   {
    //"default" : "/services/buildingpermit/buildingapplication/record",
    @load-controller-page("/services/buildingpermit/buildingapplication/")
   }
);   
</script>
<!--
<div class="col-md-12">
  <p><b>Connection Status: </b><label r:context="app" r:name="connstat" style="color:green"></label></p>
</div>
-->
<div class="btn-bldgprev">
  <button r:context="app" r:name="movePrevious" r:visibleWhen="#{page != pagesequence[0] }" class="btn-bldg"><i class="fa fa-angle-double-left"></i> Previous 
  </button>
</div>
<div class="btn-bldgnext">
  <button r:context="app" r:name="moveNext" r:visibleWhen="#{page != pagesequence[pagesequence.length-1] }" class="btn-bldgnext"> Next <i class="fa fa-angle-double-right"></i>
  </button>
  <button r:context="app" r:name="saveApplication" r:visibleWhen="#{page == pagesequence[pagesequence.length-1] }" class="btn-bldgnext"> <i class="fa fa-save"></i> Save 
  </button>
</div>
<br>

<div r:controller="app"></div>


<!-- <input type="button" r:context="app" r:name="display" value="display"> APP-2018000001 -->

