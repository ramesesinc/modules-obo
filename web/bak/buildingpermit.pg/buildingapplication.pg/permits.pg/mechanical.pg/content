
<%if( PARAMS.error !=null) { %>
<pre>Error ${PARAMS.error?.message}</pre>
<% } %>
<script>

  var controller = new function() {

  }
  \$put( "${PAGE.context}", controller );


        self.entity.items.splice( idx, 1 );

        //window.console.log( self.removeid );
        //window.console.log( id );
        //this.items.pop(this.selectedItem);
        //window.console.log( self.entity.items );
        //self.entity.items.pop( this.selectedItem );
        svc.put({key: self.id, value: self.entity});
      }

      this.onload = function() {
        self.ctc = svc.get( "${PARAMS.ctcno}" );
        self.locations = svc.get( "${PARAMS.ctcno}_location" );
        self.bldgapp = svc.get( "${PARAMS.ctcno}_bldgapp" );
        self.trackingno = svc.get( "${PARAMS.ctcno}_trackingno" );

        self.entity = svc.get( self.id );
        if (!self.entity) self.entity = {};
        if (!self.entity.items) self.entity.items = [];
        //window.console.log( self.trackingno );


      // window.console.log( self.ctc)
      //window.console.log( self.locations)
      //window.console.log( self.bldgapp)

      }

      this.indexOf = function(jsondata, key) { 
        var fval = jsondata[key]; 
        for (var i=0; i<self.entity.items.length; i++) {
          var item = self.entity.items[i]; 
          if (fval == item[key]) return i;
        }
        return -1;
      }


      this.getItem = function( jsondata, key ) {
        var item;
        var fval = jsondata[key]; 
        for (var i=0; i<self.entity.items.length; i++) {
          var x = self.entity.items[ i ];
          if (fval == x[ key ]) {
            item = x;
            break;
          }
        }
        return item;
      }

      this.getPermits = function() {
        var p = {};
        for (var i=0; i<self.entity.items.length; i++) {
          var x = self.entity.items[i];
          p[x.name] = x.id;
        }
        return p;
      }

      this.getValues = function() {
        var p = {};
        for (var i=0; i<self.entity.items.length; i++) {
          var x = self.entity.items[i];
          p[x.name] = x.value;
        }
        return p;
      }

      this.additem = function(){
        var handler = function(items){        
          for( var i=0; i<items.length; i++ ) {
              /*
               if (self.indexOf(items[i], 'id') < 0 ) {
                if (!self.entity) self.entity = {};
                if (!self.entity.items) self.entity.items = [];
                self.entity.items.push( items[i] );
                //self.items.push( items[i] );
               } 
               */
              var itm = self.getItem( items[i], 'id' );
              if (!itm) {
                if (!self.entity) self.entity = {};
                if (!self.entity.items) self.entity.items = [];
                self.entity.items.push( items[i] );
              } else {
                for (k in items[i]) {
                  itm[k] = items[i][k];
                }
                //itm.putAll( items[i] );
              }
          }
          svc.put({key: self.id, value: self.entity});
        }
        
        var permit = self.getPermits();
        var values = self.getValues();
        //window.console.log( permit );

        var params = {
          callbackHandler: handler,
          list: self.list,
          permit: permit,
          values: values
        }

        return new PopupOpener ("facilities", params,{width:500 , height: 400});
      }

      this.hasItems = function(){
        return (this.entity.items.length > 0);
      }
});

</script>

  <div id="content" style="margin-bottom: 450px;">
    <div class="container">
      <div class="primary">
          <div class="home">
            <div class="row">
              <div class="col-md-12"> 
                <div class="row">
                  <div class="col-md-12">
                   
                    <h1>Mechanical</h1>

                    <br>

                    <div class="col-md-12">
                      <p class="font16">1. Installation and Operation of <a r:context="${PAGE.context}" r:name="additem" href="" style="color:blue">Add</a></p>
                        <table r:context="${PAGE.context}" r:items="entity.items" r:varName="x" width="100%" r:name="selectedItem" style="display:none" class="table">
                          <thead>
                            <tr>
                              <th scope="col">Description</th>
                            </tr>
                          </thead>
                            <tbody>

                              <tr>
                                <td><a href="/partners/${PARAMS.name}/services/buildingpermit/buildingapplication/permits/#{x.id}"> #{x.title}</a></td>
                                <td><a r:context="${PAGE.context}" r:name="removeItem" r:param_removeid="#{x.id}">remove</a></td>
                                <!--
                                <td><input type="button" r:context="${PAGE.context}" r:name="removeItem" r:param_removeId="#{x.id}" value="Remove" /></td>
                              -->
                              </tr>
                              
                            </tbody>
                          </table>
                    </div>
                    <div class="col-md-12">
                      <p class="font16">2. Percentage of Site Occupancy</p>
                    </div>

                    <div class="col-md-12">
                      <p class="font16">3. Conformance to Fire Code <a href="" style="color:blue">Add</a></p>
                    </div>
                    
                    <br>
                   </div>
                </div>
         
              
           
                <form action="/" class="dropzone" drop-zone="" id="file-dropzone">
                    
                      
                    
                </form>


                <script type="text/javascript">


                \$.getScript('/res/dropzone/dropzone.js',function(){
                  // instantiate the uploader
                  \$('#file-dropzone').dropzone({ 
                    url: "/upload/upload",
                    maxFilesize: 1000,
                    paramName: "uploadfile",
                    maxThumbnailFilesize: 5,
                    forceFallback: true,
                    init: function() {
                      
                      this.on('success', function(file, json) {
                        window.console.log('success');
                        window.console.log(file);
                        window.console.log(json);

                      });
                      
                      this.on('addedfile', function(file) {
                        window.console.log('added file');
                        window.console.log(file);
                        
                      });
                      
                      this.on('drop', function(file) {
                        alert('file');
                      }); 
                    }
                  });
                });

                </script>
    
                   
                </div>
            </div>
        </div>
      </div>
    </div>
  </div>

</script>

