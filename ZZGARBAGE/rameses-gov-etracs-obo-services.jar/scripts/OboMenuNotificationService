import com.rameses.annotations.*;
import java.rmi.server.*;

public class OboMenuNotificationService {
	
	@DataContext("vw_building_permit_section")
	def appTask;

	@DataContext("building_permit")
	def vwApp;

	@Service("WorkflowTaskListService")
	def taskSvc;

	def getTaskCount( def r ) {
		//use self so that it will fire the interceptors
    	def nodes = taskSvc.getNodeList( r );
    	return nodes.findAll{it.count!=null}.sum{ it.count };
	}

	def building_permit_online = { o->
		return vwApp.select("c:{COUNT(*)}").where( "taskid IS NULL ").val();		
	}

	def building_permit = { o->
		def r = [processname: 'building_permit'];
		r._schemaname = "vw_building_permit";
		r.domain = o.domain;
		return getTaskCount(r);		
	}
	
	def building_permit_section = { o->
		def r = [processname: 'building_permit_section'];
		r._schemaname = "vw_building_permit_section";
		r.domain = o.domain;
		r.where = [ " typeid = :typeid", [typeid: o.typeid.toUpperCase() ] ];
		return getTaskCount(r);		
	}

	def building_permit_issuance = { o->
		def r = [processname: 'building_permit_issuance'];
		r._schemaname = "vw_building_permit_issuance";
		r.domain = o.domain;
		r.where = [ " typeid = :typeid", [typeid: o.typeid] ];
		return getTaskCount(r);		
	}

	@ProxyMethod
	public def fetchNotifications( def p ) {
		def result = p.items;
		result.each { 
			if( it.id == 'building_permit_online' ) {
				it.count = building_permit_online(p);
			}	
			else if( it.id == 'building_permit' ) {
				it.count = building_permit( p );
			}
			else if( it.id == 'occupancy_permit_online') {
				it.count = 0;
			}			
			else if( it.id == 'occupancy_permit') {
				it.count = 0;
			}			
			else if( p.event == 'building_permit_section') {
				p.typeid = it.id;
				it.count = building_permit_section( p );
			}
			else if( p.event == 'building_permit_issuance') {
				p.typeid = it.id;
				it.count = building_permit_issuance( p );				
			}
		}	
		return result;
	}

}